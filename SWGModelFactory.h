/**
 * Switch Database REST API
 * Switch API is the primary endpoint of data sevices and Switch DB's platform. You can do adding, editing, deleting or listing data works to your database with query operations by using this low-level API based on HTTP.
 *
 * OpenAPI spec version: 1.2.1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

#ifndef ModelFactory_H_
#define ModelFactory_H_


#include "SWGAddResponse.h"
#include "SWGBody.h"
#include "SWGError.h"
#include "SWGList_order.h"
#include "SWGSetResponse.h"
#include "SWGWhereItem.h"

namespace Swagger {
  inline void* create(QString type) {
    if(QString("SWGAddResponse").compare(type) == 0) {
      return new SWGAddResponse();
    }
    if(QString("SWGBody").compare(type) == 0) {
      return new SWGBody();
    }
    if(QString("SWGError").compare(type) == 0) {
      return new SWGError();
    }
    if(QString("SWGList_order").compare(type) == 0) {
      return new SWGList_order();
    }
    if(QString("SWGSetResponse").compare(type) == 0) {
      return new SWGSetResponse();
    }
    if(QString("SWGWhereItem").compare(type) == 0) {
      return new SWGWhereItem();
    }
    
    return nullptr;
  }

  inline void* create(QString json, QString type) {
    void* val = create(type);
    if(val != nullptr) {
      SWGObject* obj = static_cast<SWGObject*>(val);
      return obj->fromJson(json);
    }
    if(type.startsWith("QString")) {
      return new QString();
    }
    return nullptr;
  }
} /* namespace Swagger */

#endif /* ModelFactory_H_ */
