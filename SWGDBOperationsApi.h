/**
 * Switch Database REST API
 * Switch API is the primary endpoint of data sevices and Switch DB's platform. You can do adding, editing, deleting or listing data works to your database with query operations by using this low-level API based on HTTP.
 *
 * OpenAPI spec version: 1.2.1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

#ifndef _SWG_SWGDBOperationsApi_H_
#define _SWG_SWGDBOperationsApi_H_

#include "SWGHttpRequest.h"

#include <QString>
#include "SWGAddResponse.h"
#include "SWGBody.h"
#include "SWGError.h"
#include "SWGSetResponse.h"

#include <QObject>

namespace Swagger {

class SWGDBOperationsApi: public QObject {
    Q_OBJECT

public:
    SWGDBOperationsApi();
    SWGDBOperationsApi(QString host, QString basePath);
    ~SWGDBOperationsApi();

    QString host;
    QString basePath;

    void addPost(QString* api_key, QString* access_token, QString* list, QString* body);
    void listPost(QString* api_key, QString* access_token, QString* list, SWGBody body);
    void setDelete(QString* api_key, QString* access_token, QString* list, QString* list_item_id);
    void setPost(QString* api_key, QString* access_token, QString* list, QString* list_item_id, QString* body);
    
private:
    void addPostCallback (HttpRequestWorker * worker);
    void listPostCallback (HttpRequestWorker * worker);
    void setDeleteCallback (HttpRequestWorker * worker);
    void setPostCallback (HttpRequestWorker * worker);
    
signals:
    void addPostSignal(SWGAddResponse* summary);
    void listPostSignal();
    void setDeleteSignal(SWGSetResponse* summary);
    void setPostSignal(SWGSetResponse* summary);
    
};
}
#endif
